name: build-pgmodeler-win
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MSYS2 with MinGW64 + Qt6 + PostgreSQL + libxml2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            base-devel
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-make
            mingw-w64-x86_64-qt6
            mingw-w64-x86_64-postgresql
            mingw-w64-x86_64-libxml2
            ntldd

      - name: Fetch pgModeler 1.2.2 source
        shell: bash
        run: |
          curl -L "https://codeload.github.com/pgmodeler/pgmodeler/tar.gz/refs/tags/v1.2.2" -o pgmodeler-1.2.2.tar.gz
          tar xzf pgmodeler-1.2.2.tar.gz
          mv pgmodeler-1.2.2 src

      - name: Build + install (override include/lib vars on qmake cmdline)
        shell: msys2 {0}
        env:
          INSTALLATION_ROOT: C:/_install/pgmodeler
          # Windows-style paths are fine with qmake; MSYS2 maps C:\msys64 â†’ /
          PG_INC: C:/msys64/mingw64/include
          XML_INC: C:/msys64/mingw64/include/libxml2
          PG_DLL: C:/msys64/mingw64/bin/libpq.dll
        run: |
          set -e
          echo "Sanity: showing key paths"
          ls -l /mingw64/include/libxml2/libxml/parser.h
          ls -ld /mingw64/include/libxml2
          ls -l /mingw64/bin | sed -n '1,5p'

          cd src
          # Show qmake info
          qmake-qt6 -query

          # Configure with explicit overrides (no editing .pri):
          qmake-qt6 -r \
            CONFIG+=release \
            PREFIX=$INSTALLATION_ROOT \
            PGSQL_INC="$PG_INC" \
            PGSQL_LIB="$PG_DLL" \
            XML_INC="$XML_INC" \
            pgmodeler.pro

          make -j"$(nproc)"
          make install

          cd "$INSTALLATION_ROOT"

          # Pick the right windeployqt name
          which windeployqt-qt6 >/dev/null 2>&1 && WDEPLOY=windeployqt-qt6 || WDEPLOY=windeployqt
          echo "Using $WDEPLOY"
          $WDEPLOY pgmodeler.exe gui.dll

          # Bundle DLLs (discover dynamically)
          cp /mingw64/bin/libpq.dll . || true

          XML_DLL=$(ls /mingw64/bin/libxml2*.dll 2>/dev/null | head -n1 || true)
          if [ -n "$XML_DLL" ]; then
            echo "Copying $(basename "$XML_DLL")"
            cp "$XML_DLL" .
          else
            echo "WARNING: libxml2 runtime DLL not found under /mingw64/bin"
          fi

          for f in /mingw64/bin/libwinpthread-1.dll \
                   /mingw64/bin/libstdc++-6.dll \
                   /mingw64/bin/libgcc_s_seh-1.dll; do
            [ -f "$f" ] && cp "$f" . || true
          done

          # Sweep any remaining DLL deps
          ntldd -R pgmodeler.exe | awk '/mingw64\\\\bin/ {print $3}' | while read -r P; do
            MSYSPATH=$(cygpath "$P")
            [ -f "$MSYSPATH" ] && cp -u "$MSYSPATH" . || true
          done

      - name: Package artifact
        shell: bash
        run: 7z a pgmodeler-1.2.2-win64.zip C:\\_install\\pgmodeler\\*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pgmodeler-1.2.2-win64
          path: pgmodeler-1.2.2-win64.zip
